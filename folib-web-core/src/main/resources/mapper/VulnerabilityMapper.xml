<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.folib.mapper.VulnerabilityMapper">
    <!-- 可根据自己的需求，是否要使用 -->


    <resultMap id="ListMap" type="com.folib.forms.vulnerability.VulnerabilityDatabaseTableForm">
        <id property="id" column="id"/>
        <result property="cve" column="cve"/>
        <result property="severity" column="severity"/>
        <result property="cvssScore" column="cvssScore"/>
        <result property="cwes" column="cwes"/>
    </resultMap>

    <resultMap id="DetailMap" type="com.folib.forms.vulnerability.VulnerabilityDatabaseForm">
        <id property="id" column="id"/>
        <result property="cve" column="cve"/>
        <result property="severity" column="severity"/>
        <result property="description" column="description"/>
        <result property="v2Severity" column="v2Severity"/>
        <result property="v2ExploitabilityScore" column="v2ExploitabilityScore"/>
        <result property="v2ImpactScore" column="v2ImpactScore"/>
        <result property="v2AcInsufInfo" column="v2AcInsufInfo"/>
        <result property="v2ObtainAllPrivilege" column="v2ObtainAllPrivilege"/>
        <result property="v2ObtainUserPrivilege" column="v2ObtainUserPrivilege"/>
        <result property="v2ObtainOtherPrivilege" column="v2ObtainOtherPrivilege"/>
        <result property="v2UserInteractionRequired" column="v2UserInteractionRequired"/>
        <result property="v2Score" column="v2Score"/>
        <result property="v2AccessVector" column="v2AccessVector"/>
        <result property="v2AccessComplexity" column="v2AccessComplexity"/>
        <result property="v2Authentication" column="v2Authentication"/>
        <result property="v2ConfidentialityImpact" column="v2ConfidentialityImpact"/>
        <result property="v2IntegrityImpact" column="v2IntegrityImpact"/>
        <result property="v2AvailabilityImpact" column="v2AvailabilityImpact"/>
        <result property="v2Version" column="v2Version"/>
        <result property="v3ExploitabilityScore" column="v3ExploitabilityScore"/>
        <result property="v3ImpactScore" column="v3ImpactScore"/>
        <result property="v3AttackVector" column="v3AttackVector"/>
        <result property="v3AttackComplexity" column="v3AttackComplexity"/>
        <result property="v3PrivilegesRequired" column="v3PrivilegesRequired"/>
        <result property="v3UserInteraction" column="v3UserInteraction"/>
        <result property="v3Scope" column="v3Scope"/>
        <result property="v3ConfidentialityImpact" column="v3ConfidentialityImpact"/>
        <result property="v3IntegrityImpact" column="v3IntegrityImpact"/>
        <result property="v3AvailabilityImpact" column="v3AvailabilityImpact"/>
        <result property="v3BaseScore" column="v3BaseScore"/>
        <result property="v3BaseSeverity" column="v3BaseSeverity"/>
        <result property="v3Version" column="v3Version"/>
        <collection property="cweList" columnPrefix="cwe_" javaType="java.util.List" ofType="java.lang.String">
            <result column="id"/>
        </collection>
        <collection property="references" columnPrefix="refer_" javaType="java.util.List" ofType="java.lang.String">
            <result column="url"/>
        </collection>
    </resultMap>

    <select id="selectCweList" resultType="java.lang.String">
        SELECT cwe FROM cew WHERE cveid = #{id}
    </select>

    <select id="selectOneVulnerabilityDatabase" resultMap="DetailMap">
        SELECT
        v.id,
        v.vulnid cve,
        v.severity,
        IF(ISNULL(v.zh_description),v.zh_description,v.description) description,
        v.cvssv2basescore, v.cvssv2exploitscore, v.cvssv2impactscore, v.cvssv2vector, v.cvssv3basescore, v.cvssv3exploitscore, v.cvssv3impactscore,
        v.cvssv3vector, v.cwes, v.description, v.detail, v.epsspercentile, v.epssscore, v.friendlyvulnid, v.owasprrbusinessimpactscore, v.owasprrlikelihoodscore,
        v.owasprrtechnicalimpactscore, v.owasprrvector, v.patchedversions, v.published, v.recommendation,
        v.references refer_url, v.severity, v.source, v.subtitle, v.title,
        v.updated, v.uuid, v.vulnerableversions, v.name, v.cnv_id, v.zh_description,
        v.cwes cwe_id,
        v.severity severity
        FROM
        vulnerability v
        WHERE
        v.vulnid = #{cve}
    </select>

    <select id="selectList" resultMap="ListMap">
        SELECT v.id,
        v.vulnid cve,
        v.cwes cwes,
        v.severity severity,
        IF(ISNULL(v.cvssv3basescore), v.cvssv2basescore, v.cvssv3basescore)          cvssScore
        FROM vulnerability v
        <where>
            <if test="cve != null and cve != ''">
                v.vulnid = #{cve}
            </if>
        </where>
        ORDER BY cve desc
    </select>



    <!-- 批量新增或按主键更新数据 -->
    <insert id="insertOrUpdateBatch"  useGeneratedKeys="true">
        insert into VULNERABILITY(created,credits,cvssv2basescore,cvssv2exploitscore,cvssv2impactscore,cvssv2vector,cvssv3basescore,cvssv3exploitscore,cvssv3impactscore,cvssv3vector,cwes,description,detail,epsspercentile,epssscore,friendlyvulnid,owasprrbusinessimpactscore,owasprrlikelihoodscore,owasprrtechnicalimpactscore,owasprrvector,patchedversions,published,recommendation,`references` ,severity,`source`,subtitle,title,updated,uuid,vulnid,vulnerableversions,`name`,zh_description,cnv_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.created},#{entity.credits},#{entity.cvssV2BaseScore},#{entity.cvssV2ExploitScore},#{entity.cvssV2ImpactScore},#{entity.cvssV2Vector},#{entity.cvssV3BaseScore},#{entity.cvssV3ExploitScore},#{entity.cvssV3ImpactScore},#{entity.cvssV3Vector},#{entity.cweList},#{entity.description},#{entity.detail},#{entity.epssPercentile},#{entity.epssScore},#{entity.friendlyVulnId},#{entity.owasprrBusinessImpactScore},#{entity.owasprrLikelihoodScore},#{entity.owasprrTechnicalImpactScore},#{entity.owasprrVector},#{entity.patchedVersions},#{entity.published},#{entity.recommendation},#{entity.references},#{entity.severity},#{entity.source},#{entity.subTitle},#{entity.title},#{entity.updated},#{entity.uuid},#{entity.vulnId},#{entity.vulnerableVersions},#{entity.name},#{entity.zhDescription},#{entity.cnvId})
        </foreach>
        on duplicate key update
        created=values(created),
        credits=values(credits),
        cvssv2basescore=values(cvssv2basescore),
        cvssv2exploitscore=values(cvssv2exploitscore),
        cvssv2impactscore=values(cvssv2impactscore),
        cvssv2vector=values(cvssv2vector),
        cvssv3basescore=values(cvssv3basescore),
        cvssv3exploitscore=values(cvssv3exploitscore),
        cvssv3impactscore=values(cvssv3impactscore),
        cvssv3vector=values(cvssv3vector),
        cwes=values(cwes),
        description=values(description),
        detail=values(detail),
        epsspercentile=values(epsspercentile),
        epssscore=values(epssscore),
        friendlyvulnid=values(friendlyvulnid),
        owasprrbusinessimpactscore=values(owasprrbusinessimpactscore),
        owasprrlikelihoodscore=values(owasprrlikelihoodscore),
        owasprrtechnicalimpactscore=values(owasprrtechnicalimpactscore),
        owasprrvector=values(owasprrvector),
        patchedversions=values(patchedversions),
        published=values(published),
        recommendation=values(recommendation),
        `references`=values(`references`),
        severity=values(severity),
        `source`=values(`source`),
        subtitle=values(subtitle),
        title=values(title),
        updated=values(updated),
        uuid=values(uuid),
        vulnid=values(vulnid),
        vulnerableversions=values(vulnerableversions),
        `name`=values(`name`),
        zh_description=values(zh_description),
        cnv_id=values(cnv_id)
    </insert>


</mapper>