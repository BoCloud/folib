/*
 * Folib - [新一代AI制品仓库]
 * Copyright (C) 2025 bocloud.com.cn <folib@beyondcent.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * 本程序是自由软件：您可依据GNU通用公共许可证（GPL-3.0+）条款重新发布和修改，
 * 但禁止任何形式的商业售卖行为（包括但不限于：直接销售、捆绑销售、云服务商用）。
 *
 * This program is distributed WITHOUT ANY WARRANTY.
 * Commercial sale of this software is expressly prohibited.
 *
 * For license details, see: https://www.gnu.org/licenses/gpl-3.0.html
 * 商业授权咨询请联系：folib@beyondcent.com
 */
package com.folib.services;

import com.folib.domain.Vulnerability;
import com.folib.forms.vulnerability.RepositoryVulnerabilityStatisticsForm;
import com.folib.forms.vulnerability.VulnerabilityGraphForm;
import com.folib.forms.vulnerability.VulnerabilityTableForm;
import com.folib.scanner.common.msg.TableResultResponse;
import com.folib.scanner.common.util.Query;

import java.util.List;

/**
 * @author veadan
 * @date 2022/10/10
 **/
public interface VulnerabilityWebService {

    /**
     * 分页查询漏洞列表
     *
     * @param source          来源 1 平台级别漏洞情况 2 仓库级别漏洞情况
     * @param query           查询参数
     * @param vulnerabilityId 漏洞id
     * @param storageId       存储空间id
     * @param repositoryId    仓库id
     * @param dateSearchType  日期搜索类型
     * @return 漏洞列表
     */
    TableResultResponse<VulnerabilityTableForm> queryVulnerabilityPage(Integer source, Query query, String vulnerabilityId,
                                                                       String storageId,
                                                                       String repositoryId, Integer dateSearchType);

    /**
     * 根据制品分页查询漏洞列表
     *
     * @param page          页码
     * @param limit         每页数量
     * @param artifactPath  制品uuid
     * @param searchKeyword 搜索关键词
     * @return 漏洞列表
     */
    TableResultResponse<VulnerabilityTableForm> queryVulnerabilityPageByArtifact(Integer page, Integer limit, String artifactPath, String searchKeyword);

    /**
     * 根据组件分页查询漏洞列表
     *
     * @param page          页码
     * @param limit         每页数量
     * @param componentUuid 组件uuid
     * @param searchKeyword 搜索关键词
     * @return 漏洞列表
     */
    TableResultResponse<VulnerabilityTableForm> queryVulnerabilityPageByComponent(Integer page, Integer limit, String componentUuid, String searchKeyword);

    /**
     * 查询漏洞图谱
     *
     * @param uuid         漏洞id
     * @param storageId    存储空间id
     * @param repositoryId 仓库id
     * @return 漏洞图谱
     */
    VulnerabilityGraphForm graphV1(String uuid, String storageId, String repositoryId);

    /**
     * 仓库漏洞统计
     *
     * @param storageId    存储空间id
     * @param repositoryId 仓库id
     * @return 仓库漏洞统计
     */
    RepositoryVulnerabilityStatisticsForm repositoryVulnerabilityStatistics(String storageId, String repositoryId);

    /**
     * 处理漏洞顶点数据中的存储空间、仓库
     */
    void handlerStoragesAndRepositories();

    /**
     * 按照漏洞列表处理漏洞顶点数据中的存储空间、仓库
     *
     * @param vulnerabilityList 漏洞列表
     */
    void handlerStoragesAndRepositoriesByVulnerabilityList(List<Vulnerability> vulnerabilityList);

    /**
     * 按照漏洞列表处理漏洞顶点数据中的存储空间、仓库
     *
     * @param storageId         存储空间
     * @param repositoryId      仓库
     * @param vulnerabilityList 漏洞列表
     */
    void handlerStoragesAndRepositoriesByVulnerabilityList(String storageId, String repositoryId, List<Vulnerability> vulnerabilityList);
}
