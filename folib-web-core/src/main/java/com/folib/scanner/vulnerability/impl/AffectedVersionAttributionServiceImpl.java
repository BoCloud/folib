/*
 * Folib - [新一代AI制品仓库]
 * Copyright (C) 2025 bocloud.com.cn <folib@beyondcent.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * 本程序是自由软件：您可依据GNU通用公共许可证（GPL-3.0+）条款重新发布和修改，
 * 但禁止任何形式的商业售卖行为（包括但不限于：直接销售、捆绑销售、云服务商用）。
 *
 * This program is distributed WITHOUT ANY WARRANTY.
 * Commercial sale of this software is expressly prohibited.
 *
 * For license details, see: https://www.gnu.org/licenses/gpl-3.0.html
 * 商业授权咨询请联系：folib@beyondcent.com
 */
package com.folib.scanner.vulnerability.impl;

import com.folib.entity.AffectedVersionAttributionEntity;
import com.folib.mapper.AffectedVersionAttributionMapper;
import com.folib.scanner.vulnerability.IAffectedVersionAttributionService;
import com.folib.scanner.vulnerability.model.AffectedVersionAttribution;
import org.springframework.stereotype.Service;
import reactor.core.publisher.Flux;

import javax.inject.Inject;
import java.util.List;
import java.util.function.Function;
import java.util.stream.Collectors;

@Service
public class AffectedVersionAttributionServiceImpl implements IAffectedVersionAttributionService {


    @Inject
    private AffectedVersionAttributionMapper attributeMapper;

    /**
     * 批量插入或更新受影响的版本归属信息
     *
     * @param list 受影响的版本归属信息
     */
    @Override
    public void insertOrUpdateBatch(List<AffectedVersionAttribution> list) {


        Flux.fromIterable(list).buffer(8000)
                .map(vulnerabilityList -> {
                    return vulnerabilityList.stream().map(TO_ENTITIY).collect(Collectors.toList());
                })
                .subscribe(affectedVersionAttributionList -> {
                    this.attributeMapper.insertOrUpdateBatch(affectedVersionAttributionList);
                });
    }
    Function<AffectedVersionAttribution, AffectedVersionAttributionEntity> TO_ENTITIY = attribution -> {
        AffectedVersionAttributionEntity entity = new AffectedVersionAttributionEntity();
        entity.setLastSeen(attribution.getLastSeen())
                .setFirstSeen(attribution.getFirstSeen())
                .setVulnerability(attribution.getVulnerability().getVulnId())
                .setVulnerableSoftware(attribution.getVulnerableSoftware().getCpe22())
                .setSource(attribution.getSource())
                .setUuid(attribution.getUuid());
        return entity;
    };
}
